diff --git a/node_modules/react-native/React/Base/RCTKeyCommands.m b/node_modules/react-native/React/Base/RCTKeyCommands.m
index 2fb0db6..b3963be 100644
--- a/node_modules/react-native/React/Base/RCTKeyCommands.m
+++ b/node_modules/react-native/React/Base/RCTKeyCommands.m
@@ -18,10 +18,10 @@
 
 @interface UIEvent (UIPhysicalKeyboardEvent)
 
-@property (nonatomic) NSString *_modifiedInput;
+@property (nonatomic) NSString *_modifiedEventInput;
 @property (nonatomic) NSString *_unmodifiedInput;
-@property (nonatomic) UIKeyModifierFlags _modifierFlags;
-@property (nonatomic) BOOL _isKeyDown;
+@property (nonatomic) UIKeyModifierFlags _modifierEventFlags;
+@property (nonatomic) BOOL _isKeyEventDown;
 @property (nonatomic) long _keyCode;
 
 @end
@@ -116,16 +116,16 @@ - (void)handleKeyUIEventSwizzle:(UIEvent *)event
   UIKeyModifierFlags modifierFlags = 0;
   BOOL isKeyDown = NO;
 
-  if ([event respondsToSelector:@selector(_modifiedInput)]) {
-    modifiedInput = [event _modifiedInput];
+  if ([event respondsToSelector:@selector(_modifiedEventInput)]) {
+    modifiedInput = [event _modifiedEventInput];
   }
 
-  if ([event respondsToSelector:@selector(_modifierFlags)]) {
-    modifierFlags = [event _modifierFlags];
+  if ([event respondsToSelector:@selector(_modifierEventFlags)]) {
+    modifierFlags = [event _modifierEventFlags];
   }
 
-  if ([event respondsToSelector:@selector(_isKeyDown)]) {
-    isKeyDown = [event _isKeyDown];
+  if ([event respondsToSelector:@selector(_isKeyEventDown)]) {
+    isKeyDown = [event _isKeyEventDown];
   }
 
   BOOL hasFirstResponder = NO;
diff --git a/node_modules/react-native/React/DevSupport/RCTPackagerClient.h b/node_modules/react-native/React/DevSupport/RCTPackagerClient.h
index 6dea84f..c012d4e 100644
--- a/node_modules/react-native/React/DevSupport/RCTPackagerClient.h
+++ b/node_modules/react-native/React/DevSupport/RCTPackagerClient.h
@@ -25,7 +25,7 @@ extern const int RCT_PACKAGER_CLIENT_PROTOCOL_VERSION;
 @protocol RCTPackagerClientMethod <NSObject>
 
 - (void)handleRequest:(NSDictionary<NSString *, id> *)params withResponder:(RCTPackagerClientResponder *)responder;
-- (void)handleNotification:(NSDictionary<NSString *, id> *)params;
+- (void)handlePackageNotification:(NSDictionary<NSString *, id> *)params;
 
 @optional
 
diff --git a/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm b/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
index bd4075c..ec474d9 100644
--- a/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
+++ b/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
@@ -211,7 +211,7 @@ - (void)addHandler:(id<RCTPackagerClientMethod>)handler forMethod:(NSString *)me
 
   [self
       addNotificationHandler:^(NSDictionary<NSString *, id> *notification) {
-        [handler handleNotification:notification];
+        [handler handlePackageNotification:notification];
       }
                        queue:queue
                    forMethod:method];
